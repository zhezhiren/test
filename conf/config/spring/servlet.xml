<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">
	
	<!-- 后台管理controller -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="10000000"/>
	</bean>
	
	<!-- 对于@RequestMapping标签的解析 可选配置--> 
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="accessContextInterceptor"/>
			</list>
		</property>
	</bean>
	
	<bean id="accessContextInterceptor" class="com.plj.common.tools.springmvc.AccessControlInterceptor">
		<property name="whiteList">
			<list>
				<value>/base</value>
				<value>/test</value>
			</list>
		</property>
	</bean>
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
                    <property name="supportedMediaTypes"> 
                        <list> 
                            <value>application/json;charset=UTF-8</value> 
                        </list> 
                    </property> 
                </bean>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes"> 
                        <list> 
                            <value>text/plain;charset=UTF-8</value> 
                        </list> 
                    </property>      
                </bean>
                <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>
            </list>
        </property>
	</bean>
	
	<!-- 统一的Controller的异常处理，该操作在拦截器完成操作前进行处理 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="order" value="2"/>
        <property name="exceptionMappings">
            <props>
                <!-- 统一的异常处理适配页面，负责根据信息跳转到不同的异常页面(包括异步的JSON输出页面) -->
                <prop key="java.io.FileNotFoundException">/error/fileNotFound</prop>
            </props>
        </property>
        <property name="warnLogCategory">    
        	<value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver</value>  
    	</property> 
    </bean>
	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="cookieName" value="clientlanguage"/>
		<property name="cookieMaxAge" value="-1"/>
	</bean>
	
	<bean id = "internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />
	
	<!-- restful 请求 -->
	<!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">  
        <!-- 设置为true以忽略对Accept Header的支持    默认就是false	例如     GET /user HTTP/1.1  Accept:application/json -->
        <property name="ignoreAcceptHeader" value="false" />
        
        <!-- 这里是是否启用扩展名支持，默认就是true  例如  /user/{userid}.json -->
        <!-- <property name="favorPathExtension" value="true"/>  -->
        
        <!-- 这里是是否启用参数支持，默认就是true   例如  /user/{userid}?format=json -->
        <!-- 用于开启 /userinfo/123?format=json 的支持 -->
        <property name="favorParameter" value="false" />
        
        <!-- 在没有扩展名时即: "/user/1" 时的默认展现形式 -->
        <property name="defaultContentType" value="text/html" />

        <!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
        <property name="mediaTypes">
            <map>
                <entry key="do" value="text/html" />
                <entry key="json" value="application/json" />
                <entry key="xml" value="application/xml" />
            </map>
        </property>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
                <ref bean = "internalResourceViewResolver"/>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <!-- for application/json -->
                <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
            </list>
        </property>
    </bean>
	
	<context:component-scan base-package="com.plj.action" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
</beans>