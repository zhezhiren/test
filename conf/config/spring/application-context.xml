<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<context:property-placeholder ignore-resource-not-found="true" 
		location="classpath:config/jdbc/jdbc.properties" />
		
	<bean class="com.plj.common.tools.spring.PropertyConfigurer"> 
		<property name="ignoreResourceNotFound" value="true" /> 
		<property name="locations"> 
			<list> 
				<value>classpath:conf_system/publishPath.properties</value>
				<value>classpath:conf_system/mail.properties</value>
				<value>classpath:conf_system/operator.name.properties</value>
				<value>classpath:conf_system/shortMessage.properties</value>
			</list>
		</property> 
	</bean>
	
	<bean class="com.plj.common.tools.spring.ApplicationContextRegister"></bean>
	
	<bean id = "mysqlDialect" class = "com.plj.common.tools.mybatis.page.dialect.MySqlDialect"></bean>
	<bean id = "sqlServerDialect" class = "com.plj.common.tools.mybatis.page.dialect.SqlServerDialect"></bean>
	
	<bean id="paginationInterceptor" class="com.plj.common.tools.mybatis.page.interceptor.PaginationInterceptor">
		<property name="dialect">
			<ref bean = "${mybatis.dialect}"/>
		</property>
	</bean>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="autoCommitOnClose" value="${autoCommitOnClose}"/>
		<property name="initialPoolSize" value="${cpool.minPoolSize}"/>
		<property name="minPoolSize" value="${cpool.minPoolSize}"/>
		<property name="maxPoolSize" value="${cpool.maxPoolSize}"/>
		<property name="maxConnectionAge" value="${cpool.maxConnectionAge}"/>
		<property name="idleConnectionTestPeriod" value="${cpool.idleConnectionTestPeriod}"/>
		<property name="maxIdleTime" value = "${cpool.maxIdleTime}"/>
		<property name="automaticTestTable" value="${cpool.automaticTestTable}"/>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- property name="configLocation" value="classpath:conf_mybatis/mybatis-config.xml" / -->
		<property name="typeAliasesPackage" value="com.plj.domain" />
		<property name="mapperLocations" value = "classpath:config/mybatis/**/*.xml"/>
		<property name="plugins">
			<ref bean = "paginationInterceptor"/>
		</property>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
        <property name="basePackage" value="com.plj.dao.**"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="simpleSqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="batchSqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<constructor-arg index="1" value="BATCH" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	
    <tx:advice id="txAdviceForTransactionManager" transaction-manager="transactionManager">
    	<tx:attributes>
    		<tx:method name="*" rollback-for="java.lang.Exception" propagation="REQUIRED"/>
    	</tx:attributes>
    </tx:advice>
    
    <!-- 与aspectj联合使用，可以直接在代码上使用注释。 -->
    <aop:aspectj-autoproxy >
    	<aop:include name="beforeExample"/>
    	<aop:include name="beforeExample2"/>
    </aop:aspectj-autoproxy>
    
    <!--  -->
    <context:component-scan base-package="com.plj.common.tools.aop">
    	<context:include-filter type="annotation" expression="org.aspectj.lang.annotation.Aspect"/>
    </context:component-scan>
    
<!--      
    <bean id="beforeExample" class="com.plj.common.tools.aop.BeforeExample" />
    <bean id="beforeExample2" class="com.plj.common.tools.aop.BeforeExample2" />
     -->
    <!-- <aop:config>
    	<aop:aspect id="before" ref="beforeExample">
    		<aop:before method="doAccessCheck" pointcut="execution(* com.plj.service..*.*(..))" />
    	</aop:aspect>
    </aop:config>
	 -->
	 
	<bean id="beforeExample3" class="com.plj.common.tools.aop.BeforeExample3" />
	 
	 
	 <!-- 需要与aspectj联合使用 -->
	<aop:config>
		<aop:aspect ref="beforeExample3" >
			<aop:before method="doAccessCheck" pointcut="execution(* com.plj.service..*.*(..))"/>
		</aop:aspect>
	</aop:config>
	 
	<context:component-scan base-package="com.plj.dao,com.plj.service" />
	
</beans>